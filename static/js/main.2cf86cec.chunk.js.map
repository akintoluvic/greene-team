{"version":3,"sources":["logo.svg","images/avatar.jpg","pages/Home.js","components/Navbar.js","components/SmallProfile.js","components/SidebarTags.js","components/EditProfile.js","components/ProfileDisplay.js","components/CreateUser.js","components/Article.js","components/Image.js","partials/Feed.js","components/EachArticle.js","components/Comment.js","components/AllComment.js","partials/EachPost.js","partials/Post.js","pages/AllFeed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","value","handleChange","handleSubmit","className","to","onSubmit","htmlFor","placeholder","name","autoFocus","type","email","onChange","required","password","err","lenght","Navbar","useState","isOpen","src","logo","alt","onClick","sessionStorage","clear","SmallProfile","avatar","SidebarTags","EditProfile","firstName","lastName","gender","jobRole","department","street","area","toDashboard","state","setState","userProfile","button","updateProfile","profileChange","e","target","preventDefault","console","log","disabled","address","ProfileDisplay","event","CreateUser","done","handlePost","a","token","getItem","options","method","body","JSON","stringify","headers","fetch","then","res","json","response","error","alert","data","message","Article","tfeed","undefined","title","Date","now","parseInt","createdon","article","tag","postid","imageurl","Feed","myFeeds","map","feed","key","EachArticle","Comment","comment","setComment","Id","post","authorId","postComment","Authorization","baseUrl","catch","rows","AllComment","allComment","EachComment","commentid","eachComment","EachPost","setPost","comments","setComments","id","useParams","useEffect","getPost","Post","dataFile","imageUrl","formData","FormData","fileInput","document","querySelector","file","files","append","handlePostA","cols","action","encType","authorization","AllFeed","getPosts","getProfile","profile","newUser","newValue","userId","this","exact","path","component","Error","Component","App","handleInputValue","handleLogin","user","history","push","isAuthenticated","setItem","val","valu","ProtectedRoute","auth","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cf86cec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.598ed987.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.e67e358c.jpg\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home(props) {\r\n    const {value, handleChange, handleSubmit} = props;\r\n\r\n    return (\r\n        <div className='home'>\r\n            <div className='home-text' >\r\n                <h1 className='desktop'>Greene Teamsprint App</h1>\r\n                {/* <h2 className='mobile'>Teamsprint</h2> */}\r\n                <p>\r\n                Welcome to teamsprint. Teamsprint is all about collaboration, team building and excellent results. Great teams are powered by teamsprint, get cranking.\r\n                </p>\r\n                <Link to='/feed'>\r\n                {/* <button >Get started today</button> */}\r\n                </Link>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className='home-form' \r\n                >\r\n                <p>Signin</p>\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <br></br>\r\n                <input \r\n                    placeholder=\"username@email.com\" \r\n                    name=\"email\" \r\n                    autoFocus\r\n                    type=\"email\"\r\n                    value={value.email}\r\n                    onChange={handleChange}\r\n                    required \r\n                />\r\n                <br></br>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <br></br>\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Enter Password\" \r\n                    name=\"password\"\r\n                    value={value.password}\r\n                    onChange={handleChange}\r\n                    required \r\n                />\r\n                {(value.err.lenght === '') ? <br></br> : <p className='error'>{value.err}</p>}\r\n                <button >start sprint</button>\r\n            </form>\r\n            <footer>©2020 Vick Greenfields. All rights reserved.</footer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport logo from '../logo.svg';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <div className='navbar'>\r\n            <div className='contents'>\r\n                <div className='brand'>\r\n                    <img src={logo} alt='Team Logo'/>\r\n                    <h2>Teamsprint</h2>\r\n                </div>\r\n                <div className='navs'>\r\n                    <Link to=\"/feed\" className='link'>my feed</Link>\r\n                    <Link to=\"/profile\" className='link'>profile</Link>\r\n                    {/* <Link to=\"/#\" className='link'>tags</Link> */}\r\n                    <Link to=\"/post\" className='link'>create-post</Link>\r\n                    <Link to=\"/create-user\" className='link'>create-user</Link>\r\n                    {/* <Link to={`/feed/${id}`} className='link'>single post</Link> */}\r\n                    <Link to=\"/\" onClick={() => sessionStorage.clear()} className='link'>Logout</Link>\r\n                    <button className='user'>\r\n                        AS\r\n                    </button>\r\n                </div>\r\n                <ul className={isOpen?\"nav-links show-nav\":\"nav-links\"} >\r\n                    <li>\r\n                        <Link to=\"/feed\" className='link'>my feed</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/profile\" className='link'>profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/post\" className='link'>create-post</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/create-user\" className='link'>create-user</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/feed/tags\" className='link'>create-user</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/\" onClick={() => sessionStorage.clear()} className='link'>Logout</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport avatar from '../images/avatar.jpg';\r\n\r\nexport default function SmallProfile() {\r\n    return (\r\n        <div className='small-profile'>\r\n            <img src={avatar} alt='user-avatar' />\r\n            <p>Web Designer</p>\r\n            <h3>Vick Greenfields SO</h3>\r\n            <div>View Profile</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SidebarTags() {\r\n    return (\r\n        <div className='sidebar-tags'>\r\n            <h3>Tags</h3>\r\n            <div className='links'>\r\n                <Link to=\"/public\" className='link'>work stuff</Link>\r\n                <hr />\r\n                <Link to=\"/public\" className='link'>fun time</Link>\r\n                <hr />\r\n                <Link to=\"/public\" className='link'>tags</Link>\r\n                <hr />\r\n                <Link to=\"/public\" className='link'>create-post</Link>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function EditProfile(props) {\r\n  const [state, setState] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    gender: \"\",\r\n    jobRole: \"\",\r\n    department: \"\",\r\n    street: \"\",\r\n    area: \"\",\r\n    toDashboard: false\r\n    // handleSubmit: this.handleSubmit.bind(this)\r\n  });\r\n  const { userProfile, button, updateProfile } = props;\r\n\r\n  // const componentDidMount = () => {\r\n  //   setState({\r\n  //     ...userProfile\r\n  //   });\r\n  // }\r\n  function profileChange(e) {\r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(state);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"each-feed post\">\r\n        <div className=\"headers\">\r\n          <h2 className=\"title\">Profile</h2>\r\n          <Link to='/feed'>\r\n            <button className=\"btn\"> Back to My feed</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"profile-form\" disabled>\r\n        <label htmlFor=\"firstName\">\r\n          Firstname\r\n          <input\r\n            placeholder=\"Firstname\"\r\n            name=\"firstName\"\r\n            autoFocus\r\n            type=\"text\"\r\n            value={userProfile.firstName}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"lastName\">\r\n          Lastname\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Lastname\"\r\n            name=\"lastName\"\r\n            value={userProfile.lastName}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email address\r\n          <input\r\n            placeholder=\"username@email.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={userProfile.email}\r\n            onChange={profileChange}\r\n            disabled\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"xxxxxxxx\"\r\n            name=\"password\"\r\n            // value={userProfile.password}\r\n            // onChange={profileChange}\r\n            disabled\r\n          />\r\n        </label>\r\n        <label htmlFor=\"gender\">\r\n          Gender\r\n          <input\r\n            placeholder=\"Gender\"\r\n            name=\"gender\"\r\n            type=\"text\"\r\n            value={userProfile.gender}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"jobRole\">\r\n          Job Role\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Job Role\"\r\n            name=\"jobRole\"\r\n            value={userProfile.jobRole}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"department\">\r\n          Department\r\n          <input\r\n            placeholder=\"Department\"\r\n            name=\"department\"\r\n            type=\"text\"\r\n            value={userProfile.department}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"address\">\r\n          Address\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"17, Opposite Nadia Bread, Oka Road\"\r\n            name=\"address\"\r\n            value={userProfile.address}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"area\">\r\n          User Type\r\n          <input\r\n            placeholder=\"Ugbor Express Road, Benin, Nigeria\"\r\n            name=\"area\"\r\n            type=\"text\"\r\n            value=\"Employee\"\r\n            // onChange={profileChange}\r\n            disabled\r\n          />\r\n        </label>\r\n        <label htmlFor=\"submit\">\r\n          Submit\r\n          <button type=\"submit\" name=\"submit\">\r\n            {button}\r\n          </button>\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ProfileDisplay({userProfile, button}) {\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n\r\n    // const {userProfile, button} = props;\r\n  \r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n    // if(userProfile === undefined) {\r\n    //   return <div>Loading...</div>\r\n    // }\r\n    console.log(userProfile)\r\n    return (\r\n      <>\r\n        <div className=\"each-feed post\">\r\n          <div className=\"headers\">\r\n            <h2 className=\"title\">Profile</h2>\r\n            <Link to='/feed'>\r\n              <button className=\"btn\"> Back to My feed</button>\r\n          </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"profile-form\">\r\n          <label htmlFor=\"fname\">\r\n            Firstname\r\n            <input\r\n              placeholder=\"Firstname\"\r\n              name=\"fname\"\r\n              autoFocus\r\n              type=\"text\"\r\n              value={userProfile.firstName}\r\n              // onChange={e => setEmail(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"lastname\">\r\n            Lastname\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Lastname\"\r\n              name=\"lastname\"\r\n              value={userProfile.lastName}\r\n            //   onChange={e => setPassword(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"uname\">\r\n            Email address\r\n            <input\r\n              placeholder=\"username@email.com\"\r\n              name=\"uname\"\r\n              type=\"email\"\r\n              value={userProfile.email}\r\n              // onChange={e => setEmail(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"psw\">\r\n            Password\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"xxxxxxxx\"\r\n              name=\"psw\"\r\n              // value={password}\r\n              // onChange={e => setPassword(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"gender\">\r\n            Gender\r\n            <input\r\n              placeholder=\"Gender\"\r\n              name=\"gender\"\r\n              type=\"text\"\r\n              value={userProfile.gender}\r\n            //   onChange={e => setEmail(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"job\">\r\n            Job Role\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Job Role\"\r\n              name=\"job\"\r\n              value={userProfile.jobRole}\r\n            //   onChange={e => setPassword(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"dept\">\r\n            Department\r\n            <input\r\n              placeholder=\"Department\"\r\n              name=\"dept\"\r\n              type=\"text\"\r\n              value={userProfile.department}\r\n            //   onChange={e => setEmail(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"address\">\r\n            Address\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"17, Opposite Nadia Bread, Oka Road\"\r\n              name=\"address\"\r\n              value={userProfile.address}\r\n            //   onChange={e => setPassword(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"area\">\r\n            User Type\r\n            <input\r\n              placeholder=\"Ugbor Express Road, Benin, Nigeria\"\r\n              name=\"area\"\r\n              type=\"text\"\r\n              value=\"Employee\"\r\n            //   onChange={e => setEmail(e.target.value)}\r\n              disabled\r\n            />\r\n          </label>\r\n          <label htmlFor=\"submit\">Submit\r\n            <Link to='/edit-profile'>\r\n              <button type=\"submit\" name=\"submit\">{button}</button>\r\n              </Link>\r\n          </label>\r\n          \r\n        </form>\r\n      </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function CreateUser(props) {\r\n  const [state, setState] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    gender: \"\",\r\n    jobRole: \"\",\r\n    department: \"\",\r\n    address: \"\",\r\n    done: \"\"\r\n  });\r\n\r\n  const clear = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    gender: \"\",\r\n    jobRole: \"\",\r\n    department: \"\",\r\n    address: \"\"\r\n  }\r\n\r\n  const profileChange = e => {\r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value\r\n    });\r\n  }\r\n\r\n  const handlePost = async e => {\r\n    e.preventDefault();\r\n    const token = sessionStorage.getItem('token')\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(state),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token,\r\n        // \"crossorigin\": \"anonymous\"\r\n      }\r\n    };\r\n    const response = await fetch(\"http://localhost:3001/api/v1/auth/create-user\", options)\r\n      .then(res => res.json())\r\n        if (response.error) {\r\n          console.log(response.error);\r\n        }\r\n        console.log(response);\r\n        alert(`${response.data.message}`)\r\n        setState({ ...clear, done: response.data.message })\r\n  }\r\n\r\n  const { button } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"each-feed post\">\r\n        <div className=\"headers\">\r\n          <h2 className=\"title\">Create User</h2>\r\n          <Link to='/feed'>\r\n            <button className=\"btn\"> Back to My feed</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      { (state.done === \"\") ? \"\" : \r\n      <div className=\"each-feed post\">\r\n        {state.done}\r\n      </div>}\r\n      <form onSubmit={handlePost} className=\"profile-form\" disabled>\r\n        <label htmlFor=\"firstName\">\r\n          Firstname\r\n          <input\r\n            placeholder=\"Firstname\"\r\n            name=\"firstName\"\r\n            autoFocus\r\n            type=\"text\"\r\n            value={state.firstName}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"lastName\">\r\n          Lastname\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Lastname\"\r\n            name=\"lastName\"\r\n            value={state.lastName}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email address\r\n          <input\r\n            placeholder=\"username@email.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={state.email}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"xxxxxxxx\"\r\n            name=\"password\"\r\n            value={state.password}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"gender\">\r\n          Gender\r\n          <input\r\n            placeholder=\"Gender\"\r\n            name=\"gender\"\r\n            type=\"text\"\r\n            value={state.gender}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"jobRole\">\r\n          Job Role\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Job Role\"\r\n            name=\"jobRole\"\r\n            value={state.jobRole}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"department\">\r\n          Department\r\n          <input\r\n            placeholder=\"Department\"\r\n            name=\"department\"\r\n            type=\"text\"\r\n            value={state.department}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"address\">\r\n          Address\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"17, Opposite Nadia Bread, Oka Road\"\r\n            name=\"address\"\r\n            value={state.address}\r\n            onChange={profileChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"area\">\r\n          User Type\r\n          <input\r\n            placeholder=\"Ugbor Express Road, Benin, Nigeria\"\r\n            name=\"area\"\r\n            type=\"text\"\r\n            value=\"Employee\"\r\n            // onChange={profileChange}\r\n            disabled\r\n          />\r\n        </label>\r\n        <label htmlFor=\"submit\">\r\n          Submit\r\n          <button type=\"submit\" name=\"submit\" onClick={handlePost}>\r\n            {button}\r\n          </button>\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Article(props) {\r\n    const { tfeed } = props\r\n    if(tfeed === undefined) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n        <div className='each-feed'>\r\n            <div className='headers'>\r\n                <div className='left'>\r\n                    <button className='user'>AS</button>\r\n                    <h2 className='title'>{tfeed.title}</h2>\r\n                </div>\r\n                <button className='btn'>{(Date.now() - parseInt(tfeed.createdon))/1 }</button>\r\n            </div>\r\n            <p>\r\n                {tfeed.article}\r\n            </p>\r\n            <div className='footer'>\r\n                <button className='btn'>{tfeed.tag}</button>\r\n                <Link to={`/feed/${tfeed.postid}`} className='link'>\r\n                    <button className='btn'>VIEW full POST and COMMENTS</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n// import sampleImage from '../images/sample-image.png';\r\n\r\nexport default function Article(props) {\r\n    const { tfeed } = props\r\n    if(tfeed === undefined) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n        <div className='each-feed'>\r\n            <div className='headers'>\r\n                <div className='left'>\r\n                    <button className='user'>AS</button>\r\n                    <h2 className='title'>{tfeed.title}</h2>\r\n                </div>\r\n                <button className='btn'>{(Date.now() - parseInt(tfeed.createdon))/1 }</button>\r\n            </div>\r\n            <img className='image' src={tfeed.imageurl} alt='feed title'/>\r\n            <div className='footer'>\r\n                <button className='btn'>{tfeed.tag}</button>\r\n                <Link to={`/feed/${tfeed.postid}`} className='link'>\r\n                    <button className='btn'>VIEW full POST and COMMENTS</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Article from \"../components/Article\";\r\nimport Image from \"../components/Image\";\r\n\r\n\r\nexport default function Feed(props) {\r\n    const { myFeeds } = props\r\n    console.log(myFeeds)\r\n    if(myFeeds.lenght === 0) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n      <>\r\n        { myFeeds.map(feed => { \r\n            if (feed.imageurl === null) \r\n            return <Article key={feed.postid} tfeed={feed}/>\r\n            else {return <Image key={feed.postid}  tfeed={feed} />} \r\n            }) }\r\n      </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function EachArticle(props) {\r\n    const { tfeed } = props\r\n    console.log(tfeed);\r\n    if(tfeed === undefined) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n        <div className='each-feed'>\r\n            <div className='headers'>\r\n                <div className='left'>\r\n                    <button className='user'>AS</button>\r\n                    <h2 className='title'>{tfeed.title}</h2>\r\n                </div>\r\n                <button className='btn'>{(Date.now() - parseInt(tfeed.createdon))/1 }</button>\r\n            </div>\r\n            <p>\r\n                {tfeed.article}\r\n            </p>\r\n            <div className='footer'>\r\n                <button className='btn'>{tfeed.tag}</button>\r\n                <Link to='/feed' className='link'>\r\n                    <button className='btn'>BACK TO feed</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { baseUrl } from \"../App\";\r\n\r\nexport default function Comment(props) {\r\n    const [comment, setComment] = useState('');\r\n    const { Id } = props;\r\n    const authorId = sessionStorage.getItem('id')\r\n    const post =  { comment, authorId, Id }\r\n    const postComment = async () => {\r\n        const token = sessionStorage.getItem(\"token\");\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token\r\n          },\r\n          body: JSON.stringify(post)\r\n        };\r\n        const response = await fetch(`${baseUrl}/articles/${Id}/comment`, options)\r\n          .then(res => res.json())\r\n          .catch(error => console.log(error));\r\n        if (response.error) {\r\n          console.log(response.error);\r\n        }\r\n        // setPost({\r\n        //   ...response.data\r\n        // });\r\n        console.log(response);\r\n      };\r\n      const handleComment = e => {\r\n          const comment = e.target.value;\r\n          setComment({\r\n              ...comment\r\n          })\r\n      }\r\n    return (\r\n        <div className='each-feed'>\r\n            <textarea \r\n                className='comment'\r\n                rows=\"4\" \r\n                name=\"comment\"\r\n                value={comment}\r\n                placeholder='Write your comment here...'\r\n                onChange={e => setComment(e.target.value)}\r\n            ></textarea>\r\n            <div className='comment-container'>\r\n                <button\r\n                    className='btn'\r\n                    onClick={postComment}\r\n                >\r\n                    POST COMMENT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AllComment(props) {\r\n    const { allComment } = props;\r\n    if(allComment === 0) {\r\n        return <div>Loading...</div>\r\n    }\r\n    console.log(allComment)\r\n    return (\r\n        <div className='each-feed'>\r\n            {/* <h3>COMMENTS</h3> */}\r\n            {/* {allComment.lenght === 0 ? 'No' :\r\n            allComment.map(comment => <EachComment eachComment={comment} />)\r\n            } */}\r\n\r\n            { allComment.map(comment => <EachComment key={comment.commentid} eachComment={comment} />)}\r\n            \r\n        </div>\r\n    )\r\n}\r\nfunction EachComment(props) {\r\n    const { eachComment } = props;\r\n    return (\r\n        <div className='each-comment'>\r\n            <div className='left'>\r\n                <button className='user'>AS</button>\r\n                <span>21m</span>\r\n            </div>\r\n            <p>\r\n                {eachComment.comment} \r\n                <br></br>.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { baseUrl } from \"../App\";\r\nimport EachArticle from \"../components/EachArticle\";\r\n// import Image from \"../components/Image\";\r\nimport Comment from \"../components/Comment\";\r\nimport AllComment from \"../components/AllComment\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function EachPost(props) {\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let { id } = useParams();\r\n  // const { myFeeds } = props;\r\n  // const feed = myFeeds.filter(myFeed => myFeed.postid === id);\r\n\r\n  \r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token\r\n        }\r\n      };\r\n      const response = await fetch(`${baseUrl}/articles/${id}`, options)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error));\r\n      if (response.error) {\r\n        console.log(response.error);\r\n      }\r\n      setPost({\r\n        ...response.data\r\n      });\r\n      setComments([\r\n        ...response.data.comments\r\n      ]);\r\n      console.log(response.data.comments);\r\n    };\r\n    getPost();\r\n  }, [id]);\r\n\r\n  // if (feed.lenght === 0) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"each-feed post\">\r\n        <div className=\"headers\">\r\n          <h2 className=\"title\">Single Post</h2>\r\n          <Link to=\"/feed\">\r\n            <button className=\"btn\"> Back to My feed</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <EachArticle key={post.postid} tfeed={post} />\r\n\r\n      <Comment Id={id} />\r\n      <AllComment allComment={comments}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const GetId(postid) {\r\n//   let { id } = useParams();\r\n//   return postid = id;\r\n// }\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../App\";\r\n\r\nexport default function Post() {\r\n    const [state, setState] = useState({\r\n        title: \"\",\r\n        article: \"\",\r\n        dataFile: null,\r\n        tag: \"\",\r\n        imageUrl: null,\r\n        done: \"\"\r\n      });\r\n    \r\n      // const clear = {\r\n      //   title: \"\",\r\n      //   article: \"\",\r\n      //   department: \"\",\r\n      //   tag: \"\"\r\n      // }\r\n      const handleChange = e => {\r\n        const value = e.target.value;\r\n        setState({\r\n          ...state,\r\n          [e.target.name]: value\r\n        });\r\n      }\r\n      const authorId = sessionStorage.getItem('id')\r\n      const token = sessionStorage.getItem('token')\r\n\r\n      const handlePost = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        const fileInput = document.querySelector('#file') ;\r\n        const file = e.target.files[0]\r\n        console.log(file);\r\n        formData.append(\"dataFile\", fileInput.files[0]);\r\n\r\n        const options = {\r\n          method: \"POST\",\r\n          body: formData,\r\n          // files: formData,\r\n          headers: {\r\n            // \"Content-Type\": \"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n            // boundary=----WebKitFormBoundaryqTqJIxvkWFYqvP5s\r\n            \"Authorization\": token\r\n          }\r\n        };\r\n        await fetch(`${baseUrl}/gifs`, options)\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.error) {\r\n              console.log(res.error);\r\n              // return this.props.history.push(\"/\");\r\n            }\r\n            console.log(res);\r\n          })\r\n          .catch(error => console.log(error));\r\n      }\r\n\r\n      const handlePostA = async e => {\r\n        const data = {authorId, ...state}\r\n        const options = {\r\n          method: \"POST\",\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token,\r\n            // encType: \"multipart/form-data\"\r\n            // \"crossorigin\": \"anonymous\"\r\n          }\r\n        };\r\n        const response = await fetch(`${baseUrl}/articles`, options)\r\n          .then(res => res.json())\r\n          // .catch(error => console.log(error));\r\n             if (response.error) {\r\n              console.log(response.error);\r\n              // return this.props.history.push(\"/\");\r\n            }\r\n            console.log(response);\r\n            // alert(`${response.data.message}`)\r\n      }\r\n\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"each-feed post\">\r\n        <div className=\"headers\">\r\n          <h2 className=\"title\">Post</h2>\r\n          <Link to=\"/feed\">\r\n            <button className=\"btn\"> Back to My feed</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      { (state.done === \"\") ? \"\" : \r\n      <div className=\"each-feed post\">\r\n        {state.done}\r\n      </div>}\r\n      \r\n      <div className=\"each-feed post\">\r\n        <label htmlFor=\"title\">Post Title*</label>\r\n        <br></br>\r\n        <input\r\n          placeholder=\"Write your title here...\"\r\n          className=\"comment\"\r\n          name=\"title\"\r\n          autoFocus\r\n          type=\"text\"\r\n          value={state.title}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"article\">Post Body*</label>\r\n        <br></br>\r\n        <textarea\r\n          className=\"comment\"\r\n          name=\"article\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          placeholder=\"Write your comment here...\"\r\n          value={state.article}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n\r\n        <form  action={`${baseUrl}/gifs`} encType=\"multipart/form-data\"  method=\"POST\" authorization={token}>\r\n          <div className=\"form-group\"> Add Media\r\n            <input className=\"form-control\" id=\"file\" onChange={handlePost} name=\"dataFile\" type=\"file\" />\r\n            {/* <input type=\"submit\" value='Upload'/> */}\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"headers\">\r\n          <div className=\"left\">\r\n            <label htmlFor=\"tag\">Article Tag*</label>\r\n            <input\r\n              placeholder=\"Type tag here...\"\r\n              className=\"comment\"\r\n              name=\"tag\"\r\n              type=\"text\"\r\n              value={state.tag}\r\n              onChange={handleChange}\r\n              />\r\n          </div>\r\n          <button className=\"btn\" onClick={handlePostA}>POST ARTICLE</button>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { baseUrl } from \"../App\"\r\nimport Navbar from \"../components/Navbar\";\r\nimport SmallProfile from \"../components/SmallProfile\";\r\nimport SidebarTags from \"../components/SidebarTags\";\r\nimport EditProfile from \"../components/EditProfile\";\r\nimport ProfileDisplay from \"../components/ProfileDisplay\";\r\nimport CreateUser from \"../components/CreateUser\";\r\nimport Feed from \"../partials/Feed\";\r\nimport EachPost from \"../partials/EachPost\";\r\nimport Post from \"../partials/Post\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  // useParams,\r\n  // useHistory,\r\n  // useLocation\r\n} from \"react-router-dom\";\r\n\r\nexport default class AllFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // loading: true,\r\n      // redirect: false,\r\n      profile: {\r\n        userId: 1,\r\n        firstName: \"Lola\",\r\n        lastName: \"Loki\",\r\n        email: \"ase@we.co\",\r\n        gender: \"male\",\r\n        jobRole: \"Bardy\",\r\n        department: \"Accounting\",\r\n        street: \"12, Adewou street\",\r\n        area: \"Were LAne, Ota, Ogun\"\r\n      },\r\n      feed: [],\r\n    };\r\n  }\r\n  getPosts = async () => {\r\n    const token = sessionStorage.getItem('token')\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token,\r\n        // \"crossorigin\": \"anonymous\"\r\n      }\r\n    };\r\n    const response = await fetch(`${baseUrl}/feed`, options)\r\n    const feed = await response.json();\r\n    if(feed.error) {console.log(feed.error)}\r\n    this.setState({\r\n              feed: feed.data\r\n            });\r\n    console.log(feed.data)\r\n  }\r\n  getProfile = async () => {\r\n    const token = sessionStorage.getItem('token')\r\n    const id = sessionStorage.getItem('id')\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": token,\r\n        // \"crossorigin\": \"anonymous\"\r\n      }\r\n    };\r\n    const response = await fetch(`${baseUrl}/auth/profile/${id}`, options)\r\n    const profile = await response.json();\r\n    if(profile.error) {console.log(profile.error)}\r\n    this.setState({\r\n      profile: profile.data\r\n    });\r\n    console.log(profile.data)\r\n  }\r\n  \r\n  componentDidMount() {\r\n     this.getPosts();\r\n     this.getProfile();\r\n    //  this.setState({\r\n    //   feed\r\n    // });\r\n  }\r\n\r\n  handleChange = e => {\r\n    console.log(e.target.value, e.target.name);\r\n    const newValue = `[e.target.name]: e.target.value `\r\n    this.setState({\r\n          // [e.target.name]: e.target.value\r\n          newUser: {...this.state.profile, newValue }\r\n          // [this.state.newUser{e.target.name}]: e.target.value\r\n        });\r\n  };\r\n  render() {\r\n    // let { id } = useParams();\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"page-container\">\r\n          <div className=\"sidebar\">\r\n            <SmallProfile />\r\n            <SidebarTags />\r\n            <p>©2019 Vick Greenfields. All rights reserved.\r\n            </p>\r\n          </div>\r\n          <div className=\"main-feed\">\r\n            <Switch>\r\n              <Route exact path=\"/feed\">\r\n                <Feed myFeeds={this.state.feed}/>\r\n              </Route>\r\n              <Route exact path=\"/create-user\">\r\n                <CreateUser\r\n                  button=\"CREATE USER\"\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <ProfileDisplay\r\n                  userProfile={this.state.profile}\r\n                  button=\"EDIT PROFILE\"\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/edit-profile\">\r\n                <EditProfile \r\n                  userProfile={this.state.profile}\r\n                  button=\"UPDATE PROFILE\"\r\n                  profileChange={this.handleChange}\r\n                  updateProfile={this.getProfile}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/post\">\r\n                <Post />\r\n              </Route>\r\n              <Route path='/feed/:id'>\r\n                <EachPost myFeeds={this.state.feed}/>\r\n              </Route>\r\n              {/* <Route path=\"/feed/:id\" component={<EachPost />}/> */}\r\n\r\n              <Route component={Error} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import AuthExample from './testPAge';\r\nimport Home from \"./pages/Home\";\r\nimport AllFeed from \"./pages/AllFeed\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // loading: true,\r\n      // redirect: false,\r\n      feed: {},\r\n      token: '',\r\n      isAuthenticated: false,\r\n      profile: {},\r\n        email: '',\r\n        password: '',\r\n        err: '',\r\n    };\r\n  }\r\n  handleInputValue = (e) => {\r\n    const value = e.target.value;\r\n        this.setState({\r\n          // ...state,\r\n          [e.target.name]: value\r\n        });\r\n  }\r\n  pageAuth(val, valu) {\r\n    console.log(val)\r\n    this.setState({\r\n      isAuthenticated: val,\r\n      profile: valu\r\n    });\r\n  }\r\n  handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const response = await fetch(`${baseUrl}/auth/signin`, options)\r\n      .then(res => res.json())\r\n        if (response.error) {\r\n          this.setState({\r\n            ...this.state,\r\n            err: response.error\r\n          });\r\n          return this.props.history.push(\"/\");\r\n        }\r\n        this.setState({\r\n          isAuthenticated: true,\r\n          profile: response.data,\r\n          token: response.token\r\n        });\r\n        const token = `Bearer ${response.token} ${response.userId}`\r\n        sessionStorage.setItem('token', token);\r\n        sessionStorage.setItem('id', response.userId);\r\n        // let history = useHistory();\r\n        this.props.history.push(\"/feed\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home \r\n            handleSubmit={this.handleLogin} \r\n            handleChange={this.handleInputValue} \r\n            value={this.state} />\r\n          </Route>\r\n          <ProtectedRoute path='/feed' auth={this.state.isAuthenticated}>\r\n            <AllFeed />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path='/profile' auth={this.state.isAuthenticated} />\r\n          <ProtectedRoute path='/post' auth={this.state.isAuthenticated} />\r\n          <ProtectedRoute path='/create-user' auth={this.state.isAuthenticated} />\r\n          <ProtectedRoute path='/feed/:id' auth={this.state.isAuthenticated} />\r\n          <ProtectedRoute path='/profile' auth={this.state.isAuthenticated} />\r\n          <ProtectedRoute path='/edit-profile' auth={this.state.isAuthenticated} />\r\n        </Switch>\r\n        {/* { isUserAuthenticated() ? props.children : <Redirect to={routes.login} /> } */}\r\n      </div>\r\n  );\r\n        }\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\nfunction ProtectedRoute(props) {\r\n  let token = sessionStorage.getItem('token');\r\n  return (\r\n    <>\r\n    {/* return this.props.history.push(\"/\"); */}\r\n    {/* { !props.auth ? <Route exact path='/' component={Home}/> : <Route component={AllFeed}/> } */}\r\n    { !token ? <Route exact path='/' component={Home}/> : <Route component={AllFeed}/> }\r\n    </>\r\n  );\r\n}\r\n\r\nexport const baseUrl = \"http://localhost:3001/api/v1\"\r\n// export const baseUrl = \"https://workplace-teamwork.herokuapp.com/api/v1\"\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router  } from \"react-router-dom\";\r\n  \r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}